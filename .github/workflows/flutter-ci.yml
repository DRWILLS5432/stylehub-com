name: Flutter CI

on: [push, pull_request]

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: stable
          architecture: x64

      - name: Install dependencies
        run: |
          flutter pub add intl:^0.20.2
          flutter pub get

      - name: Generate code metrics report
        run: |
          cat << 'EOF' > generate_report.dart
          import 'dart:io';

          void main() {
            try {
              // Count metrics
              final libDir = Directory('lib');
              var totalLines = 0;
              var moduleCount = 0; // Dart files
              var interfaceCount = 0; // Files with 'interface' or 'abstract class'
              var classCount = 0; // Files with 'class'
              var methodCount = 0; // Method declarations
              var widgetCount = 0; // Widget classes
              var packageCount = 0; // Unique imported packages
              final languages = <String, int>{};
              final packages = <String>{};

              if (libDir.existsSync()) {
                libDir.listSync(recursive: true).forEach((entity) {
                  if (entity is File && !entity.path.contains('/generated/')) {
                    final extension = entity.path.split('.').last.toLowerCase();
                    final lines = entity.readAsLinesSync().length;
                    totalLines += lines;
                    final lang = extension == 'dart' ? 'Dart' : extension == 'yaml' ? 'YAML' : extension == 'json' ? 'JSON' : 'Other';
                    languages[lang] = (languages[lang] ?? 0) + lines;

                    if (extension == 'dart') {
                      moduleCount++;
                      final content = entity.readAsStringSync();
                      // Interfaces: 'interface' or 'abstract class'
                      if (content.contains('interface ') || content.contains('abstract class ')) {
                        interfaceCount++;
                      }
                      // Classes: 'class'
                      if (content.contains('class ')) {
                        classCount++;
                      }
                      // Widgets: Subclasses of Widget, StatelessWidget, or StatefulWidget
                      if (content.contains('extends StatelessWidget') || 
                          content.contains('extends StatefulWidget') || 
                          content.contains('extends Widget')) {
                        widgetCount++;
                      }
                      // Methods: Lines with method signatures
                      content.split('\n').forEach((line) {
                        line = line.trim();
                        if (line.contains('(') && line.contains(')') && line.contains('{') &&
                            !line.startsWith('class') && !line.startsWith('abstract')) {
                          methodCount++;
                        }
                      });
                      // Packages: Unique 'import' statements
                      content.split('\n').forEach((line) {
                        if (line.startsWith('import ') && line.contains('package:')) {
                          final match = RegExp(r"package:([a-zA-Z0-9_]+)/").firstMatch(line);
                          if (match != null) {
                            packages.add(match.group(1)!);
                          }
                        }
                      });
                    }
                  }
                });
              }
              packageCount = packages.length;

              // Generate HTML report
              final html = StringBuffer('''
              <!DOCTYPE html>
              <html lang="en">
              <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>StyleHub Code Metrics Report</title>
                <script src="https://cdn.tailwindcss.com"></script>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <style>
                  body { background-color: #f9fafb; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
                  .container { max-width: 1200px; margin: 0 auto; padding: 1rem; }
                  .summary { margin-bottom: 1.5rem; }
                  .content { display: flex; gap: 1.5rem; }
                  .metrics-container { flex: 1; }
                  .chart-container { width: 300px; height: 300px; }
                  .summary p { margin: 0.5rem 0; }
                </style>
              </head>
              <body>
                <div class="container">
                  <h1 class="text-2xl font-bold text-gray-800 mb-6">StyleHub Code Metrics Report</h1>
                  <div class="content">
                    <div class="metrics-container">
                      <div class="summary bg-white p-4 rounded-lg shadow">
                        <p><strong>Всего строк кода:</strong> $totalLines</p>
                        <p><strong>Реализовано модулей:</strong> $moduleCount</p>
                        <p><strong>Подготовлено интерфейсов:</strong> $interfaceCount</p>
                        <p><strong>Реализовано классов:</strong> $classCount</p>
                        <p><strong>Реализовано методов:</strong> $methodCount</p>
                        <p><strong>Использовано виджетов:</strong> $widgetCount</p>
                        <p><strong>Импортировано пакетов:</strong> $packageCount</p>
                        <p><strong>Языки:</strong> ${languages.keys.join(', ')}</p>
                      </div>
                    </div>
                    <div class="chart-container">
                      <canvas id="metricsChart"></canvas>
                      <script>
                        const ctx = document.getElementById('metricsChart').getContext('2d');
                        new Chart(ctx, {
                          type: 'pie',
                          data: {
                            labels: ['Lines', 'Modules', 'Interfaces', 'Classes', 'Methods', 'Widgets', 'Packages'],
                            datasets: [{
                              data: [$totalLines, $moduleCount, $interfaceCount, $classCount, $methodCount, $widgetCount, $packageCount],
                              backgroundColor: ['#2563eb', '#10b981', '#f59e0b', '#dc2626', '#8b5cf6', '#ec4899', '#4b5563'],
                              borderColor: ['white', 'white', 'white', 'white', 'white', 'white', 'white'],
                              borderWidth: 2
                            }]
                          },
                          options: {
                            plugins: {
                              legend: { position: 'bottom', labels: { font: { size: 12 } } }
                            },
                            maintainAspectRatio: true
                          }
                        });
                      </script>
                    </div>
                  </div>
                </div>
              </body>
              </html>
              ''');
              Directory('analysis-report').createSync();
              File('analysis-report/index.html').writeAsStringSync(html.toString());
            } catch (e) {
              print('Error generating report: $e');
              Directory('analysis-report').createSync();
              File('analysis-report/index.html').writeAsStringSync('''
              <!DOCTYPE html>
              <html lang="en">
              <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>StyleHub Code Metrics Report</title>
                <script src="https://cdn.tailwindcss.com"></script>
                <style>
                  body { background-color: #f9fafb; }
                  .container { max-width: 1200px; margin: 0 auto; padding: 1rem; }
                </style>
              </head>
              <body>
                <div class="container">
                  <h1 class="text-2xl font-bold text-red-600 mb-6">Error generating report: $e</h1>
                </div>
              </body>
              </html>
              ''');
            }
          }
          EOF
          dart run generate_report.dart

      - name: Upload analysis report
        uses: actions/upload-artifact@v4
        with:
          name: analysis-report
          path: analysis-report/
